{"ast":null,"code":"import axiosInstance from \"./axiosConfig\";\nexport const calculate = (amount, duration) => {\n  const totalInterest = amount * (5 / 100) * duration;\n  const totalAmountToBePaid = amount + totalInterest;\n  const monthlyReturn = totalAmountToBePaid / duration;\n  //const monthlyInterestRate = interestRate / 100 / numberOfMonths;  //Math.round\n  return {\n    totalInterest: parseInt(totalInterest),\n    totalAmountToBePaid: parseInt(totalAmountToBePaid),\n    monthlyReturn: parseInt(monthlyReturn)\n  };\n};\nconst interestEarned = (principal, timeInDays) => {\n  const interestRate = 4 / 100; // Convert percentage to decimal\n  const interest = principal * interestRate * (timeInDays / 365); // Assuming 365 days in a year\n  return interest;\n};\nexport const getAllConsultation = async () => {\n  const response = await axiosInstance.get(\"/getalluserconsultation\");\n  return response.data;\n};\nexport const getSingleConsulation = async data => {\n  console.log(data, \"ser\");\n  const response = await axiosInstance.post(\"/getsingleconsulation\", data);\n  return response.data;\n};\nexport const loanRequestService = async data => {\n  const response = await axiosInstance.post(\"/user/loanrequest\", data);\n  return response;\n};\nexport const registerUser = async data => {\n  const response = await axiosInstance.post(\"/user/register\", data);\n  return response;\n};\nexport const loginUser = async data => {\n  const response = await axiosInstance.post(\"/user/login\", data); ///user/login\n  if (response.status === 200) {\n    localStorage.setItem(\"user\", JSON.stringify(response.data.data));\n    localStorage.setItem(\"token\", response.data.data.token);\n    return response;\n  }\n  return null;\n};\nexport const getAllUsers = async data => {\n  const response = await axiosInstance.get(\"/getalluser\", data);\n  return response.data;\n};\n\n///wallet/fundwallet\n\nexport const getDashboardDetails = async id => {\n  const response = await axiosInstance.get(\"/user/dashboard\");\n  return response;\n};\nexport const FundWalletservices = async data => {\n  const response = await axiosInstance.post(\"/wallet/fundwallet\", data);\n  return response.data;\n};\n_c = FundWalletservices;\nvar _c;\n$RefreshReg$(_c, \"FundWalletservices\");","map":{"version":3,"names":["axiosInstance","calculate","amount","duration","totalInterest","totalAmountToBePaid","monthlyReturn","parseInt","interestEarned","principal","timeInDays","interestRate","interest","getAllConsultation","response","get","data","getSingleConsulation","console","log","post","loanRequestService","registerUser","loginUser","status","localStorage","setItem","JSON","stringify","token","getAllUsers","getDashboardDetails","id","FundWalletservices","_c","$RefreshReg$"],"sources":["C:/Users/HP/coperative-frontend/src/features/services/userServices.js"],"sourcesContent":["\r\nimport axiosInstance from \"./axiosConfig\"\r\n\r\n\r\n\r\n\r\n\r\nexport const  calculate = (amount, duration)=>{\r\n  \r\n  const totalInterest = (amount * (5 / 100) * duration);\r\n  const totalAmountToBePaid = amount + totalInterest\r\n  const monthlyReturn = totalAmountToBePaid/duration\r\n  //const monthlyInterestRate = interestRate / 100 / numberOfMonths;  //Math.round\r\n  return {totalInterest : parseInt(totalInterest),\r\n        totalAmountToBePaid : parseInt(totalAmountToBePaid), \r\n        monthlyReturn:parseInt(monthlyReturn) };\r\n} \r\n\r\n\r\n\r\n\r\nconst interestEarned = (principal, timeInDays) => {\r\n  const interestRate = 4 / 100; // Convert percentage to decimal\r\n  const interest = principal * interestRate * (timeInDays / 365); // Assuming 365 days in a year\r\n  return interest;\r\n};\r\n\r\n\r\nexport const getAllConsultation  = async ()=> {\r\n  const response = await axiosInstance.get(\"/getalluserconsultation\");\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\nexport const getSingleConsulation  = async (data)=> {\r\n  console.log(data,\"ser\")\r\n  const response = await axiosInstance.post(\"/getsingleconsulation\",data);\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\n\r\nexport const loanRequestService  = async (data)=> {\r\n  const response = await axiosInstance.post(\"/user/loanrequest\",data);\r\n\r\n  return response\r\n    \r\n}\r\n\r\nexport const registerUser  = async (data)=> {\r\n  const response = await axiosInstance.post(\"/user/register\",data);\r\n\r\n  return response\r\n    \r\n}\r\n\r\nexport const loginUser  = async (data)=> {\r\n  const response = await axiosInstance.post(\"/user/login\",data);///user/login\r\n  if(response.status ===200){\r\n    localStorage.setItem(\"user\", JSON.stringify(response.data.data))\r\n    localStorage.setItem(\"token\", (response.data.data.token))\r\n    return response\r\n    \r\n   } \r\n   return null\r\n    \r\n}\r\n\r\n\r\nexport const getAllUsers  = async (data)=> {\r\n  const response = await axiosInstance.get(\"/getalluser\",data);\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\n///wallet/fundwallet\r\n\r\nexport const getDashboardDetails  = async (id)=> {\r\n  const response = await axiosInstance.get(\"/user/dashboard\");\r\n\r\n  return response\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport const FundWalletservices  = async (data)=> {\r\n  const response = await axiosInstance.post(\"/wallet/fundwallet\",data);\r\n\r\n  return response.data\r\n    \r\n}\r\n\r\n   "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}